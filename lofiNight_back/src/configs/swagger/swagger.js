/**
 * Kh·ªüi t·∫°o swagger
 * T·∫°o API documentation t·ª´ c√°c route v√† schema
 */

const swaggerJsdoc = require("swagger-jsdoc");
const swaggerUi = require("swagger-ui-express");
const swaggerConfig = require("./swaggerConfig");

// T·∫°o swagger spec t·ª´ config
const swaggerSpec = swaggerJsdoc(swaggerConfig);

/**
 * Middleware ƒë·ªÉ serve Swagger UI
 */
const swaggerUiOptions = {
  explorer: true,
  customSiteTitle: "üéµ Lofi Night API Documentation",
  customfavIcon: "/favicon.ico",
  swaggerOptions: {
    docExpansion: "full",
    filter: true,
    showRequestHeaders: true,
    tryItOutEnabled: true,
    displayRequestDuration: true,
    defaultModelsExpandDepth: 2,
    defaultModelExpandDepth: 2,
    requestInterceptor: (req) => {
      // Th√™m token v√†o header n·∫øu c√≥
      const token = localStorage.getItem("token");
      if (token) {
        req.headers.Authorization = `Bearer ${token}`;
      }
      return req;
    },
  },
};

/**
 * T·∫°o swagger middleware
 */
const swaggerMiddleware = [
  swaggerUi.serve,
  swaggerUi.setup(swaggerSpec, swaggerUiOptions),
];

/**
 * L∆∞u swagger spec ra file JSON (cho vi·ªác export)
 */
const saveSwaggerSpec = () => {
  const fs = require("fs");
  const path = require("path");

  const outputPath = path.join(__dirname, "swaggerOutput.json");

  try {
    fs.writeFileSync(outputPath, JSON.stringify(swaggerSpec, null, 2));
    console.log("‚úÖ ƒê√£ l∆∞u Swagger spec v√†o:", outputPath);
  } catch (error) {
    console.error("‚ùå L·ªói khi l∆∞u Swagger spec:", error.message);
  }
};

// L∆∞u spec khi kh·ªüi t·∫°o (ch·ªâ trong development v√† ch·ªâ khi ch∆∞a c√≥ file)
if (process.env.NODE_ENV === "development") {
  const fs = require("fs");
  const path = require("path");
  const outputPath = path.join(__dirname, "swaggerOutput.json");

  // Ch·ªâ l∆∞u n·∫øu file ch∆∞a t·ªìn t·∫°i ƒë·ªÉ tr√°nh v√≤ng l·∫∑p
  if (!fs.existsSync(outputPath)) {
    saveSwaggerSpec();
  }
}

module.exports = {
  swaggerMiddleware,
  swaggerSpec,
  saveSwaggerSpec,
};
